apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  labels:
    app: {{ template "name" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "name" . }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: {{ .Chart.Name }}
        args:
          - /app/http_server.rb
        command:
          - ruby
        env:
          - name: SERVER_PORT
            value: "{{ .Values.service.internalPort }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        # Specify security settings at container level
        securityContext:
          runAsUser: 1337
          allowPrivilegeEscalation: false
        ports:
          - name: http
            containerPort: {{ .Values.service.internalPort }}
            protocol: TCP
        # The startup probe, the application will have 
        # a maximum of 50 seconds (5 * 10 = 50s) to finish its startup. 
        startupProbe:
          httpGet:
            path: /
            port: http
          failureThreshold: 5
          periodSeconds: 10
        # Once the startup probe has succeeded once, 
        # the liveness probe takes over to provide 
        # a fast response to container deadlocks.
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: 3
          periodSeconds: 3
        # Sometimes, applications are temporarily unable to serve traffic.
        # A pod with containers reporting that they are not ready 
        # does not receive traffic through Kubernetes Services.
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 5
      # Specify security settings at pod level
      securityContext:
        fsGroup: 1337
        runAsGroup: 1337
        runAsUser: 1337
